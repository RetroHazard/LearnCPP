https://www.learncpp.com/cpp-tutorial/introduction-to-pointers/
See webpage for Code Samples

Question #1
What values does this program print?
Assume a short is 2 bytes, and a 32-bit machine.

&value  =   0012FF60
value   =   7
ptr     =   0012FF60
*ptr    =   7

&value  =   0012FF60
value   =   9
ptr     =   0012FF60
*ptr    =   9

&otherValue =   0012FF54
otherValue  =   3
ptr         =   0012FF54
*ptr        =   3

sizeof(ptr) =   4
sizeof(*ptr)=   2

[From the Solution Notes]
A short explanation about the 4 and the 2.
A 32-bit machine means that pointers will be 32 bits in length,
but sizeof() always prints the size in bytes. 3
2 bits is 4 bytes. Thus the sizeof(ptr) is 4.
Because ptr is a pointer to a short, *ptr is a short.
The size of a short in this example is 2 bytes. Thus the sizeof(*ptr) is 2.

===========

Question #2
Whatâ€™s wrong with this snippet of code?

Line 3 attempts to retrieve the value of the pointer (int) and overwrite
it with a memory address (&value), unable to assign mem. addr. to int type.